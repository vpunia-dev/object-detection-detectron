
FROM nvidia/cuda:10.2-base-ubuntu18.04
ENV LANG C.UTF-8
LABEL com.nvidia.volumes.needed="nvidia_driver"

RUN echo "deb http://developer.download.nvidia.com/compute/machine-learning/repos/ubuntu1604/x86_64 /" > /etc/apt/sources.list.d/nvidia-ml.list

RUN apt-get update && apt-get install -y --no-install-recommends \
    build-essential \
    cmake \
    git \
    curl \
    vim \
    ca-certificates \
    python-qt4 \
    libjpeg-dev \
    libgtk2.0-dev \
    pkg-config \
    zip \
    unzip \
    libpng-dev &&\
    rm -rf /var/lib/apt/lists/*

ENV LD_LIBRARY_PATH /usr/local/nvidia/lib:/usr/local/nvidia/lib64
ENV PYTHON_VERSION=3.7

RUN curl -o ~/miniconda.sh -O  https://repo.anaconda.com/miniconda/Miniconda3-latest-Linux-x86_64.sh && \
    chmod +x ~/miniconda.sh && \
    ~/miniconda.sh -b -p /opt/conda && \
    rm ~/miniconda.sh && \
    /opt/conda/bin/conda install conda-build && \
    /opt/conda/bin/conda init bash

ENV PATH=$PATH:/opt/conda/bin/
ENV USER ${DOCKER_USER} 
# Create Enviroment
COPY environment.yml /environment.yml
COPY requirements.txt /requirements.txt
RUN conda env create -f /environment.yml
# Make RUN commands use the new evnironment
# SHELL ["conda", "run", "-n", "var-auto", "/bin/bash","-c", ""]
# SHELL ["conda", "run", "-n", "covid-ai-xray", "/bin/bash", "-c", "pip install -r /requirements.txt"]

CMD source ~/.bashrc

RUN mkdir -p ${PJ_DOCKER_DIR}
WORKDIR ${PJ_DOCKER_DIR}

RUN chmod -R a+w ${PJ_DOCKER_DIR}
COPY docker_entrypoint.sh /
RUN chmod 777 /docker_entrypoint.sh

CMD ["/bin/bash", "/docker_entrypoint.sh"]
